
    # this is for the db/files that we want to expire after awhile
    proxy_cache_path /pacman/db levels=1:2 keys_zone=db:20m inactive=30d use_temp_path=off;

    # Pacman Cache
    server
    {
        listen      80;
        root        /pacman/root;
        autoindex   on;

        # currently no databases are signed, don't bother checking
        location ~ \.db.sig$ {
            return 404;
        }

        # Requests for package db, signature files and files db should redirect upstream without caching
        location ~ \.(db|files)$ {

            add_header X-Cache-Status $upstream_cache_status;

            proxy_cache db;

            proxy_cache_lock on;
            proxy_cache_lock_timeout 300s;
            proxy_cache_use_stale  error timeout invalid_header http_500 http_502 http_503 http_504 http_403 http_404 http_429;

            proxy_cache_valid 200 302 1h;
            proxy_cache_valid 404 1m;

            proxy_pass          http://arch_mirror$request_uri;
        }

        # Requests for actual packages should be served directly from cache if available.
        #   If not available, retrieve and save the package from an upstream mirror.
        location ~ \.tar\.?[^.]*(\.sig)?$ {
        #location ~ \.(tar.*|db|files)$ {

            add_header X-Cache-Status HIT;

            try_files $uri @arch_mirror_cache;
        }

        # Retrieve package from upstream mirrors and cache for future requests
        location @arch_mirror_cache {

            add_header X-Cache-Status MISS;

            proxy_store    on;
            proxy_redirect off;
            proxy_store_access  user:rw group:rw all:r;
            proxy_next_upstream error timeout http_404;
            proxy_pass          http://arch_mirror$request_uri;
        }
    }
